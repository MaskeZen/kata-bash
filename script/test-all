#!/usr/bin/env bash

example_test_function() {
    echo "testing1"
}
another_test_function() {
    echo "testing2"
}

declare -a suite
suite-add() {
    shift
    suite+=("$1")
}
suite-reset() {
    suite=()
}
suite-run(){
    for test_function in "${suite[@]}"; do
        "$test_function"
    done
}

assert-equal() {
    local expected="$1"; shift
    local actual="$1"; shift
    [[ "$expected"  == "$actual" ]] || {
        echo "Expected: $expected"
        echo "  Actual: $actual"
        any_failure=true
    }
}
report-exit-code() {
    if [[ $any_failure ]]
    then
        return 1
    fi
}

a=(one two three)
assert-equal "one" "${a[0]}"
list="$(
for i in "${a[@]}"; do
    echo -n "$i,"
done)"
assert-equal "one,two,three," "$list"

ref=a
a_ref="a[@]"
list_ref="$(
for i in "${!a_ref}"; do
    echo -n "$i."
done)"
assert-equal "one.two.three." "$list_ref"

suite-add suite example_test_function
output="$(suite-run)"
assert-equal "testing1" "$output" 

suite-add suite another_test_function
output="$(suite-run)"
assert-equal "testing1
testing2" "$output" 

suite-reset
suite-add suite another_test_function
output="$(suite-run)"
assert-equal "testing2" "$output" 

report-exit-code
